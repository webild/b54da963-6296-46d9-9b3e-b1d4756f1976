[
  {
    "import": "import BentoAccordion from '@/components/accordions/BentoAccordion';",
    "name": "BentoAccordion",
    "path": "@/components/accordions/BentoAccordion",
    "propsSchema": {
      "items": "Array<{ title: string; content: string; }>",
      "title": "string",
      "className": "string",
      "containerClassName": "string",
      "titleClassName": "string",
      "gridClassName": "string",
      "itemClassName": "string",
      "itemTitleClassName": "string",
      "itemIconContainerClassName": "string",
      "itemIconClassName": "string",
      "itemContentClassName": "string"
    }
  },
  {
    "import": "import ImageAccordion from '@/components/accordions/ImageAccordion';",
    "name": "ImageAccordion",
    "path": "@/components/accordions/ImageAccordion",
    "propsSchema": {
      "items": "Array<{ title: string; content: string; }>",
      "imageSrc": "string",
      "imageAlt": "string",
      "title": "string",
      "className": "string",
      "titleClassName": "string",
      "gridClassName": "string",
      "imageContainerClassName": "string",
      "imageClassName": "string",
      "accordionContainerClassName": "string",
      "itemClassName": "string",
      "itemTitleClassName": "string",
      "itemIconContainerClassName": "string",
      "itemIconClassName": "string",
      "itemContentClassName": "string"
    }
  },
  {
    "import": "import PlainAccordion from '@/components/accordions/PlainAccordion';",
    "name": "PlainAccordion",
    "path": "@/components/accordions/PlainAccordion",
    "propsSchema": {
      "items": "Array<{ title: string; content: string; }>",
      "title": "string",
      "className": "string",
      "titleClassName": "string",
      "dividerClassName": "string",
      "itemClassName": "string",
      "itemTitleClassName": "string",
      "itemIconContainerClassName": "string",
      "itemIconClassName": "string",
      "itemContentClassName": "string"
    }
  },
  {
    "import": "import RegularAccordion from '@/components/accordions/RegularAccordion';",
    "name": "RegularAccordion",
    "path": "@/components/accordions/RegularAccordion",
    "propsSchema": {
      "items": "Array<{ title: string; content: string; }>",
      "title": "string",
      "className": "string",
      "titleClassName": "string",
      "itemClassName": "string",
      "itemTitleClassName": "string",
      "itemIconContainerClassName": "string",
      "itemIconClassName": "string",
      "itemContentClassName": "string"
    }
  },
  {
    "import": "import Accordion from '@/components/accordions/SharedAccordion';",
    "name": "Accordion",
    "path": "@/components/accordions/SharedAccordion",
    "propsSchema": {
      "index": "number",
      "isActive": "boolean",
      "onToggle": "(index: number) => void",
      "title": "string",
      "content": "string",
      "className": "string",
      "titleClassName": "string",
      "iconContainerClassName": "string",
      "iconClassName": "string",
      "contentClassName": "string"
    }
  },
  {
    "import": "import SideAccordion from '@/components/accordions/SideAccordion';",
    "name": "SideAccordion",
    "path": "@/components/accordions/SideAccordion",
    "propsSchema": {
      "items": "Array<{ title: string; content: string; }>",
      "title": "string",
      "description": "string",
      "className": "string",
      "gridClassName": "string",
      "sideContainerClassName": "string",
      "titleClassName": "string",
      "descriptionClassName": "string",
      "accordionContainerClassName": "string",
      "dividerClassName": "string",
      "itemClassName": "string",
      "itemTitleClassName": "string",
      "itemIconContainerClassName": "string",
      "itemIconClassName": "string",
      "itemContentClassName": "string"
    }
  },
  {
    "import": "import { BorderFillBackground } from '@/components/background/BorderFillBackground';",
    "name": "BorderFillBackground",
    "path": "@/components/background/BorderFillBackground",
    "propsSchema": {
      "rx": "number",
      "ry": "number",
      "strokeColor": "string",
      "baseStrokeColor": "string",
      "fillColor": "string",
      "strokeWidth": "number",
      "scrollTriggerOptions": "{ start: string; end: string; scrub: number | boolean; }",
      "children": "React.ReactNode"
    }
  },
  {
    "import": "import { CanvasRevealEffect } from '@/components/background/CanvasRevealEffect';",
    "name": "CanvasRevealEffect",
    "path": "@/components/background/CanvasRevealEffect",
    "propsSchema": {
      "colors": "Array<Array<number>>",
      "opacities": "Array<number>",
      "totalSize": "number",
      "dotSize": "number",
      "shader": "string",
      "center": "Array<'x' | 'y'>"
    }
  },
  {
    "import": "import { CardPattern } from '@/components/background/CardPattern';",
    "name": "CardPattern",
    "path": "@/components/background/CardPattern",
    "propsSchema": {
      "mouseX": "MotionValue<number>",
      "mouseY": "MotionValue<number>",
      "randomString": "string",
      "isActive": "boolean"
    }
  },
  {
    "import": "import { GlowingEffect } from '@/components/background/GlowingEffect';",
    "name": "GlowingEffect",
    "path": "@/components/background/GlowingEffect",
    "propsSchema": {
      "blur": "number",
      "inactiveZone": "number",
      "proximity": "number",
      "spread": "number",
      "variant": "\"default\" | \"white\"",
      "glow": "boolean",
      "className": "string",
      "disabled": "boolean",
      "movementDuration": "number",
      "borderWidth": "number"
    }
  },
  {
    "import": "import SideGlowGradientBackground from '@/components/background/SideGlowGradientBackground';",
    "name": "SideGlowGradientBackground",
    "path": "@/components/background/SideGlowGradientBackground",
    "propsSchema": {
      "radialColor": "string",
      "linearColor": "string",
      "radialOpacity": "string",
      "linearOpacity": "string",
      "linearOpacityMobile": "string",
      "className": "string",
      "inset": "string",
      "rounded": "string"
    }
  },
  {
    "import": "import Spotlight from '@/components/background/Spotlight';",
    "name": "Spotlight",
    "path": "@/components/background/Spotlight",
    "propsSchema": {
      "className": "string",
      "spotlightClassName": "string",
      "width": "string",
      "height": "string",
      "left": "string",
      "top": "string",
      "rotate": "string",
      "color": "string",
      "blur": "string",
      "opacity": "number",
      "mobileWidth": "string",
      "mobileHeight": "string",
      "mobileLeft": "string",
      "mobileTop": "string",
      "mobileRotate": "string"
    }
  },
  {
    "import": "import AuroraBackground from '@/components/background/auroraBackground/AuroraBackground';",
    "name": "AuroraBackground",
    "path": "@/components/background/auroraBackground/AuroraBackground",
    "propsSchema": {
      "className": "string"
    }
  },
  {
    "import": "import Bento from '@/components/bento/Bento';",
    "name": "Bento",
    "path": "@/components/bento/Bento",
    "propsSchema": {
      "items": "Array<{ title: string description: string; }>",
      "className": "string",
      "gridClassName": "string",
      "itemClassName": "string"
    }
  },
  {
    "import": "import KPIBento from '@/components/bento/KPIBento';",
    "name": "KPIBento",
    "path": "@/components/bento/KPIBento",
    "propsSchema": {
      "items": "Array<{ value: string description: string longDescription?: string icon?: LucideIcon; }>",
      "className": "string",
      "gridClassName": "string",
      "itemClassName": "string",
      "valueClassName": "string",
      "descriptionClassName": "string",
      "longDescriptionClassName": "string",
      "iconContainerClassName": "string",
      "iconClassName": "string"
    }
  },
  {
    "import": "import PricingBento from '@/components/bento/PricingBento';",
    "name": "PricingBento",
    "path": "@/components/bento/PricingBento",
    "propsSchema": {
      "items": "Array<{ badge: Array<string badgeIcon?: LucideIcon price: string subtitle?: string features?: string>; }>",
      "className": "string",
      "gridClassName": "string",
      "itemClassName": "string",
      "badgeClassName": "string",
      "priceClassName": "string",
      "subtitleClassName": "string",
      "featuresClassName": "string",
      "featureItemClassName": "string"
    }
  },
  {
    "import": "import SimpleKPIBento from '@/components/bento/SimpleKPIBento';",
    "name": "SimpleKPIBento",
    "path": "@/components/bento/SimpleKPIBento",
    "propsSchema": {
      "items": "Array<{ value: string description: string longDescription?: string icon?: LucideIcon; }>",
      "className": "string",
      "gridClassName": "string",
      "itemClassName": "string",
      "valueClassName": "string",
      "descriptionClassName": "string",
      "gradientColors": "{ from: string; to: string; }"
    }
  },
  {
    "import": "import SimpleStepsBento from '@/components/bento/SimpleStepsBento';",
    "name": "SimpleStepsBento",
    "path": "@/components/bento/SimpleStepsBento",
    "propsSchema": {
      "items": "Array<{ title: string description: string; }>",
      "className": "string",
      "containerClassName": "string",
      "stepClassName": "string",
      "numberClassName": "string",
      "titleClassName": "string",
      "descriptionClassName": "string"
    }
  },
  {
    "import": "import BorderFillBento from '@/components/bento/borderFillBento/BorderFillBento';",
    "name": "BorderFillBento",
    "path": "@/components/bento/borderFillBento/BorderFillBento",
    "propsSchema": {
      "items": "Array<BorderFillItemType>",
      "className": "string",
      "rowClassName": "string",
      "itemClassName": "string"
    }
  },
  {
    "import": "import BorderFillItem from '@/components/bento/borderFillBento/BorderFillItem';",
    "name": "BorderFillItem",
    "path": "@/components/bento/borderFillBento/BorderFillItem",
    "propsSchema": {
      "item": "{ icon: LucideIcon title: string description: string; }",
      "rowIndex": "number",
      "itemIndex": "number",
      "className": "string"
    }
  },
  {
    "import": "import GalleryBento from '@/components/bento/galleryBento/GalleryBento';",
    "name": "GalleryBento",
    "path": "@/components/bento/galleryBento/GalleryBento",
    "propsSchema": {
      "items": "Array<{ title: string image: string; }>",
      "className": "string",
      "gridClassName": "string"
    }
  },
  {
    "import": "import GalleryItem from '@/components/bento/galleryBento/GalleryItem';",
    "name": "GalleryItem",
    "path": "@/components/bento/galleryBento/GalleryItem",
    "propsSchema": {
      "item": "{ title: string image: string; }",
      "layoutClass": "string",
      "dimensions": "{ width: number; height: number; }",
      "priority": "boolean"
    }
  },
  {
    "import": "import GlowingBento from '@/components/bento/glowingBento/GlowingBento';",
    "name": "GlowingBento",
    "path": "@/components/bento/glowingBento/GlowingBento",
    "propsSchema": {
      "items": "Array<{ icon: LucideIcon title: string description: string; }>",
      "className": "string",
      "rowClassName": "string",
      "itemClassName": "string"
    }
  },
  {
    "import": "import GlowingItem from '@/components/bento/glowingBento/GlowingItem';",
    "name": "GlowingItem",
    "path": "@/components/bento/glowingBento/GlowingItem",
    "propsSchema": {
      "item": "{ icon: LucideIcon title: string description: string; }",
      "rowIndex": "number",
      "itemIndex": "number",
      "className": "string"
    }
  },
  {
    "import": "import { InfoRevealBento } from '@/components/bento/infoRevealBento/InfoRevealBento';",
    "name": "InfoRevealBento",
    "path": "@/components/bento/infoRevealBento/InfoRevealBento",
    "propsSchema": {
      "items": "Array<{ id: string title: string description: string imageSrc: string; }>",
      "enableHoverAnimation": "boolean",
      "showImages": "boolean",
      "className": "string",
      "gridClassName": "string",
      "itemClassName": "string"
    }
  },
  {
    "import": "import InfoRevealBentoItem from '@/components/bento/infoRevealBento/InfoRevealBentoItem';",
    "name": "InfoRevealBentoItem",
    "path": "@/components/bento/infoRevealBento/InfoRevealBentoItem",
    "propsSchema": {
      "item": "{ id: string title: string description: string imageSrc: string; }",
      "index": "number",
      "isMobile": "boolean",
      "enableHoverAnimation": "boolean",
      "showImages": "boolean",
      "totalItems": "number",
      "className": "string"
    }
  },
  {
    "import": "import PatternBento from '@/components/bento/patternBento/PatternBento';",
    "name": "PatternBento",
    "path": "@/components/bento/patternBento/PatternBento",
    "propsSchema": {
      "items": "Array<{ icon: LucideIcon title: string description: string; }>",
      "className": "string",
      "rowClassName": "string",
      "itemClassName": "string"
    }
  },
  {
    "import": "import PatternItem from '@/components/bento/patternBento/PatternItem';",
    "name": "PatternItem",
    "path": "@/components/bento/patternBento/PatternItem",
    "propsSchema": {
      "item": "{ icon: LucideIcon title: string description: string; }",
      "rowIndex": "number",
      "itemIndex": "number",
      "className": "string"
    }
  },
  {
    "import": "import RevealBento from '@/components/bento/revealBento/RevealBento';",
    "name": "RevealBento",
    "path": "@/components/bento/revealBento/RevealBento",
    "propsSchema": {
      "items": "Array<{ icon: LucideIcon text: string; }>",
      "className": "string",
      "rowClassName": "string",
      "itemClassName": "string"
    }
  },
  {
    "import": "import RevealItem from '@/components/bento/revealBento/RevealItem';",
    "name": "RevealItem",
    "path": "@/components/bento/revealBento/RevealItem",
    "propsSchema": {
      "icon": "LucideIcon",
      "text": "string",
      "className": "string"
    }
  },
  {
    "import": "import ThreeDBento from '@/components/bento/threeDBento/ThreeDBento';",
    "name": "ThreeDBento",
    "path": "@/components/bento/threeDBento/ThreeDBento",
    "propsSchema": {}
  },
  {
    "import": "import ThreeDBentoItem from '@/components/bento/threeDBento/ThreeDBentoItem';",
    "name": "ThreeDBentoItem",
    "path": "@/components/bento/threeDBento/ThreeDBentoItem",
    "propsSchema": {}
  },
  {
    "import": "import ArrowButton from '@/components/buttons/ArrowButton';",
    "name": "ArrowButton",
    "path": "@/components/buttons/ArrowButton",
    "propsSchema": {
      "text": "string",
      "onClick": "() => void",
      "className": "string",
      "textClassName": "string",
      "iconClassName": "string"
    }
  },
  {
    "import": "import BubbleButton from '@/components/buttons/BubbleButton';",
    "name": "BubbleButton",
    "path": "@/components/buttons/BubbleButton",
    "propsSchema": {
      "text": "string",
      "onClick": "React.MouseEventHandler<HTMLButtonElement>",
      "className": "string",
      "contentClassName": "string",
      "arrowClassName": "string",
      "disabled": "boolean",
      "ariaLabel": "string",
      "type": "'button' | 'submit' | 'reset'"
    }
  },
  {
    "import": "import ExpandingButton from '@/components/buttons/ExpandingButton';",
    "name": "ExpandingButton",
    "path": "@/components/buttons/ExpandingButton",
    "propsSchema": {
      "text": "string",
      "onClick": "() => void",
      "className": "string",
      "textClassName": "string",
      "iconClassName": "string"
    }
  },
  {
    "import": "import PushableButton from '@/components/buttons/PushableButton';",
    "name": "PushableButton",
    "path": "@/components/buttons/PushableButton",
    "propsSchema": {
      "text": "string",
      "children": "React.ReactNode",
      "onClick": "() => void",
      "className": "string",
      "frontClassName": "string",
      "disabled": "boolean",
      "ariaLabel": "string",
      "type": "'button' | 'submit' | 'reset'",
      "variant": "'bottom' | 'side' | 'none'"
    }
  },
  {
    "import": "import SelectorButton from '@/components/buttons/SelectorButton';",
    "name": "SelectorButton",
    "path": "@/components/buttons/SelectorButton",
    "propsSchema": {
      "options": "Array<{ value: string; label: React.ReactNode; }>",
      "activeValue": "string",
      "onValueChange": "(value: string) => void",
      "className": "string",
      "buttonClassName": "string",
      "hoverClassName": "string"
    }
  },
  {
    "import": "import SlideButton from '@/components/buttons/SlideButton';",
    "name": "SlideButton",
    "path": "@/components/buttons/SlideButton",
    "propsSchema": {
      "text": "string",
      "onClick": "() => void",
      "className": "string",
      "contentClassName": "string",
      "bgColor": "string",
      "hoverBgColor": "string",
      "textColor": "string",
      "hoverTextColor": "string"
    }
  },
  {
    "import": "import UnderlineButton from '@/components/buttons/UnderlineButton';",
    "name": "UnderlineButton",
    "path": "@/components/buttons/UnderlineButton",
    "propsSchema": {
      "text": "string",
      "onClick": "() => void",
      "className": "string",
      "disabled": "boolean",
      "ariaLabel": "string",
      "type": "'button' | 'submit' | 'reset'"
    }
  },
  {
    "import": "import DirectionalHoverButton from '@/components/buttons/directionalHoverButton/DirectionalHoverButton';",
    "name": "DirectionalHoverButton",
    "path": "@/components/buttons/directionalHoverButton/DirectionalHoverButton",
    "propsSchema": {
      "text": "string",
      "onClick": "() => void",
      "className": "string",
      "textClassName": "string",
      "bgClassName": "string",
      "circleClassName": "string"
    }
  },
  {
    "import": "import MagneticButton from '@/components/buttons/magneticButton/MagneticButton';",
    "name": "MagneticButton",
    "path": "@/components/buttons/magneticButton/MagneticButton",
    "propsSchema": {
      "text": "string",
      "onClick": "() => void",
      "className": "string",
      "strengthFactor": "number"
    }
  },
  {
    "import": "import MovingBorder from '@/components/buttons/movingBorderButton/MovingBorder';",
    "name": "MovingBorder",
    "path": "@/components/buttons/movingBorderButton/MovingBorder",
    "propsSchema": {
      "children": "React.ReactNode",
      "duration": "number",
      "rx": "string",
      "ry": "string"
    }
  },
  {
    "import": "import MovingBorderButton from '@/components/buttons/movingBorderButton/MovingBorderButton';",
    "name": "MovingBorderButton",
    "path": "@/components/buttons/movingBorderButton/MovingBorderButton",
    "propsSchema": {
      "text": "string",
      "onClick": "() => void",
      "className": "string",
      "borderRadius": "string",
      "containerClassName": "string",
      "borderClassName": "string",
      "duration": "number"
    }
  },
  {
    "import": "import RotatingIconButton from '@/components/buttons/rotatingIconButton/RotatingIconButton';",
    "name": "RotatingIconButton",
    "path": "@/components/buttons/rotatingIconButton/RotatingIconButton",
    "propsSchema": {
      "text": "string",
      "onClick": "() => void",
      "className": "string"
    }
  },
  {
    "import": "import ShiftButton from '@/components/buttons/shiftButton/ShiftButton';",
    "name": "ShiftButton",
    "path": "@/components/buttons/shiftButton/ShiftButton",
    "propsSchema": {
      "text": "string",
      "onClick": "() => void",
      "className": "string",
      "bgClassName": "string",
      "textClassName": "string"
    }
  },
  {
    "import": "import StaggerButton from '@/components/buttons/staggerButton/StaggerButton';",
    "name": "StaggerButton",
    "path": "@/components/buttons/staggerButton/StaggerButton",
    "propsSchema": {
      "text": "string",
      "onClick": "() => void",
      "className": "string",
      "bgClassName": "string"
    }
  },
  {
    "import": "import { Carousel } from '@/components/carousels/Carousel';",
    "name": "Carousel",
    "path": "@/components/carousels/Carousel",
    "propsSchema": {
      "children": "React.ReactNode"
    }
  },
  {
    "import": "import { usePrevNextButtons } from '@/components/carousels/EmblaCarouselArrowButtons';",
    "name": "usePrevNextButtons",
    "path": "@/components/carousels/EmblaCarouselArrowButtons",
    "propsSchema": {}
  },
  {
    "import": "import { ProgressCarousel } from '@/components/carousels/ProgressCarousel';",
    "name": "ProgressCarousel",
    "path": "@/components/carousels/ProgressCarousel",
    "propsSchema": {
      "children": "React.ReactNode"
    }
  },
  {
    "import": "import { AutoCarousel } from '@/components/carousels/autoCarousel/AutoCarousel';",
    "name": "AutoCarousel",
    "path": "@/components/carousels/autoCarousel/AutoCarousel",
    "propsSchema": {
      "children": "React.ReactNode"
    }
  },
  {
    "import": "import { AutoscrollCarousel } from '@/components/carousels/autoscrollCarousel/AutoscrollCarousel';",
    "name": "AutoscrollCarousel",
    "path": "@/components/carousels/autoscrollCarousel/AutoscrollCarousel",
    "propsSchema": {
      "children": "React.ReactNode"
    }
  },
  {
    "import": "import { DraggableCarousel } from '@/components/carousels/draggableCarousel/DraggableCarousel';",
    "name": "DraggableCarousel",
    "path": "@/components/carousels/draggableCarousel/DraggableCarousel",
    "propsSchema": {
      "children": "React.ReactNode"
    }
  },
  {
    "import": "import { FullscreenCarousel } from '@/components/carousels/fullscreenCarousel/FullscreenCarousel';",
    "name": "FullscreenCarousel",
    "path": "@/components/carousels/fullscreenCarousel/FullscreenCarousel",
    "propsSchema": {
      "children": "React.ReactNode"
    }
  },
  {
    "import": "import { InfiniteCarousel } from '@/components/carousels/infiniteCarousel/InfiniteCarousel';",
    "name": "InfiniteCarousel",
    "path": "@/components/carousels/infiniteCarousel/InfiniteCarousel",
    "propsSchema": {
      "children": "React.ReactNode"
    }
  },
  {
    "import": "import { StackCarousel } from '@/components/carousels/stackCarousel/StackCarousel';",
    "name": "StackCarousel",
    "path": "@/components/carousels/stackCarousel/StackCarousel",
    "propsSchema": {
      "children": "React.ReactNode"
    }
  },
  {
    "import": "import { PageNav } from '@/components/common/PageNav';",
    "name": "PageNav",
    "path": "@/components/common/PageNav",
    "propsSchema": {
      "position": "'top' | 'bottom'"
    }
  },
  {
    "import": "import FooterLogo from '@/components/footer/FooterLogo';",
    "name": "FooterLogo",
    "path": "@/components/footer/FooterLogo",
    "propsSchema": {
      "logoSrc": "string",
      "logoAlt": "string",
      "logoText": "string",
      "className": "string",
      "svgClassName": "string"
    }
  },
  {
    "import": "import GradientFooter from '@/components/footer/GradientFooter';",
    "name": "GradientFooter",
    "path": "@/components/footer/GradientFooter",
    "propsSchema": {
      "logoSrc": "string",
      "logoAlt": "string",
      "logoText": "string",
      "items": "Array<{ label: string; onClick: () => void; }>",
      "className": "string",
      "containerClassName": "string",
      "gradientClassName": "string",
      "logoClassName": "string",
      "itemsClassName": "string",
      "itemClassName": "string",
      "buttonClassName": "string"
    }
  },
  {
    "import": "import LogoFooter from '@/components/footer/LogoFooter';",
    "name": "LogoFooter",
    "path": "@/components/footer/LogoFooter",
    "propsSchema": {
      "logoSrc": "string",
      "logoAlt": "string",
      "columns": "Array<{ items: Array<{ label: string; onClick: () => void; }>; }>",
      "logoText": "string",
      "className": "string",
      "containerClassName": "string",
      "logoClassName": "string",
      "columnsClassName": "string",
      "columnClassName": "string",
      "itemClassName": "string",
      "iconClassName": "string",
      "buttonClassName": "string"
    }
  },
  {
    "import": "import RevealFooter from '@/components/footer/RevealFooter';",
    "name": "RevealFooter",
    "path": "@/components/footer/RevealFooter",
    "propsSchema": {
      "logoSrc": "string",
      "logoWidth": "number",
      "logoHeight": "number",
      "columns": "Array<{ items: Array<{ label: string; onClick: () => void; }>; }>",
      "copyrightText": "string",
      "onPrivacyClick": "() => void",
      "className": "string",
      "wrapperClassName": "string",
      "containerClassName": "string",
      "footerClassName": "string",
      "footerContainerClassName": "string",
      "logoClassName": "string",
      "columnsClassName": "string",
      "columnClassName": "string",
      "columnTitleClassName": "string",
      "columnItemClassName": "string",
      "copyrightContainerClassName": "string",
      "copyrightTextClassName": "string",
      "privacyButtonClassName": "string"
    }
  },
  {
    "import": "import SimpleFooter from '@/components/footer/SimpleFooter';",
    "name": "SimpleFooter",
    "path": "@/components/footer/SimpleFooter",
    "propsSchema": {
      "logoSrc": "string",
      "logoWidth": "number",
      "logoHeight": "number",
      "columns": "Array<{ items: Array<{ label: string; onClick: () => void; }>; }>",
      "copyrightText": "string",
      "onPrivacyClick": "() => void",
      "className": "string",
      "containerClassName": "string",
      "logoClassName": "string",
      "columnsClassName": "string",
      "columnClassName": "string",
      "columnTitleClassName": "string",
      "columnItemClassName": "string",
      "copyrightContainerClassName": "string",
      "copyrightTextClassName": "string",
      "privacyButtonClassName": "string"
    }
  },
  {
    "import": "import MinimalNavbar from '@/components/navigation/MinimalNavbar';",
    "name": "MinimalNavbar",
    "path": "@/components/navigation/MinimalNavbar",
    "propsSchema": {
      "logoSrc": "string",
      "logoWidth": "number",
      "logoHeight": "number",
      "buttonText": "string",
      "onButtonClick": "() => void",
      "className": "string"
    }
  },
  {
    "import": "import SimpleFloatingNavbar from '@/components/navigation/SimpleFloatingNavbar';",
    "name": "SimpleFloatingNavbar",
    "path": "@/components/navigation/SimpleFloatingNavbar",
    "propsSchema": {
      "navItems": "Array<{ id: string; name: string; }>",
      "logoSrc": "string",
      "logoWidth": "number",
      "logoHeight": "number",
      "buttonText": "string",
      "onButtonClick": "() => void",
      "className": "string"
    }
  },
  {
    "import": "import SimpleNavbar from '@/components/navigation/SimpleNavbar';",
    "name": "SimpleNavbar",
    "path": "@/components/navigation/SimpleNavbar",
    "propsSchema": {
      "logoSrc": "string",
      "logoAlt": "string",
      "leftButtonText": "string",
      "rightButtonText": "string",
      "onLeftButtonClick": "() => void",
      "onRightButtonClick": "() => void",
      "className": "string",
      "containerClassName": "string",
      "logoClassName": "string",
      "buttonClassName": "string",
      "buttonContentClassName": "string",
      "buttonBgColor": "string",
      "buttonHoverBgColor": "string",
      "buttonTextColor": "string",
      "buttonHoverTextColor": "string"
    }
  },
  {
    "import": "import AppleStyleNavbar from '@/components/navigation/appleStyleNavbar/AppleStyleNavbar';",
    "name": "AppleStyleNavbar",
    "path": "@/components/navigation/appleStyleNavbar/AppleStyleNavbar",
    "propsSchema": {}
  },
  {
    "import": "import ExpandingMenu from '@/components/navigation/expandingMenu/ExpandingMenu';",
    "name": "ExpandingMenu",
    "path": "@/components/navigation/expandingMenu/ExpandingMenu",
    "propsSchema": {
      "isOpen": "boolean",
      "onToggle": "() => void",
      "navItems": "Array<{ id: string; name: string; }>",
      "onNavClick": "(id: string) => void",
      "currentPage": "string",
      "isScrolled": "boolean"
    }
  },
  {
    "import": "import FloatingNavbar from '@/components/navigation/floatingNavbar/FloatingNavbar';",
    "name": "FloatingNavbar",
    "path": "@/components/navigation/floatingNavbar/FloatingNavbar",
    "propsSchema": {
      "navItems": "Array<{ id: string; name: string; }>",
      "logoSrc": "string",
      "logoWidth": "number",
      "logoHeight": "number",
      "buttonText": "string",
      "onButtonClick": "() => void"
    }
  },
  {
    "import": "import MobileMenu from '@/components/navigation/mobileMenu/MobileMenu';",
    "name": "MobileMenu",
    "path": "@/components/navigation/mobileMenu/MobileMenu",
    "propsSchema": {
      "menuOpen": "boolean",
      "onMenuToggle": "() => void",
      "navItems": "Array<{ id: string; name: string; }>",
      "onNavClick": "(id: string) => void",
      "children": "React.ReactNode"
    }
  },
  {
    "import": "import SplitNavbar from '@/components/navigation/splitNavbar/SplitNavbar';",
    "name": "SplitNavbar",
    "path": "@/components/navigation/splitNavbar/SplitNavbar",
    "propsSchema": {
      "logoSrc": "string",
      "logoWidth": "number",
      "logoHeight": "number",
      "buttonText": "string",
      "onButtonClick": "() => void",
      "navItems": "Array<{ id: string; name: string; }>",
      "defaultSelectorValue": "string",
      "onSelectorChange": "(value: string) => void",
      "className": "string",
      "enableScrollDetection": "boolean"
    }
  },
  {
    "import": "import TextRenderer from '@/components/sections/layouts/TextRenderer';",
    "name": "TextRenderer",
    "path": "@/components/sections/layouts/TextRenderer",
    "propsSchema": {
      "config": "{ text: string; className: string; useRetroText: boolean; animation: 'slide' | 'rotate' | 'highlight' | 'blur' | 'scale' | 'expand' | 'flip' | 'none'; shadowColor: string; shadowOffset: string; animationProps: { duration: number; stagger: number; start: string; end: string; variant: 'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'; }; gradientColors: { from: string; to: string; }; }",
      "as": "'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p'"
    }
  },
  {
    "import": "import MomoCoinAbout from '@/components/sections/layouts/about/Momocoinabout';",
    "name": "MomoCoinAbout",
    "path": "@/components/sections/layouts/about/Momocoinabout",
    "propsSchema": {
      "style": "{ section: { className: string; backgroundColor: string; backgroundPattern: string; backgroundImage: string; spotlight: { width: string; height: string; left: string; top: string; rotate: string; color: string; blur: string; opacity: number; mobileWidth: string; mobileHeight: string; mobileLeft: string; mobileTop: string; mobileRotate: string; }; sparkles: { particleColor: string; particleDensity: number; minSize: number; maxSize: number; speed: number; }; } & { innerClassName: string; showBorder: boolean; fadeBottom: boolean; }; gradient: { show: boolean; radialColor: string; linearColor: string; radialOpacity: string; linearOpacity: string; linearOpacityMobile: string; className: string; inset: string; rounded: string; }; title: { text: string; className: string; useRetroText: boolean; animation: 'slide' | 'rotate' | 'highlight' | 'blur' | 'scale' | 'expand' | 'flip' | 'none'; shadowColor: string; shadowOffset: string; animationProps: { duration: number; stagger: number; start: string; end: string; variant: 'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'; }; gradientColors: { from: string; to: string; }; }; descriptions: { texts: Array<string>; className: string; containerClassName: string; }; layout: { alignStart: boolean; descriptionClassName: string; textboxClassName: string; }; button: { className: string; childClassName: string; iconClassName: string; variant: 'bottom' | 'side' | 'none'; }; image: { parentClassName: string; className: string; }; }"
    }
  },
  {
    "import": "import PlayfulAbout from '@/components/sections/layouts/about/PlayfulAbout';",
    "name": "PlayfulAbout",
    "path": "@/components/sections/layouts/about/PlayfulAbout",
    "propsSchema": {
      "style": "{ section: { className: string; backgroundColor: string; backgroundPattern: string; backgroundImage: string; spotlight: { width: string; height: string; left: string; top: string; rotate: string; color: string; blur: string; opacity: number; mobileWidth: string; mobileHeight: string; mobileLeft: string; mobileTop: string; mobileRotate: string; }; sparkles: { particleColor: string; particleDensity: number; minSize: number; maxSize: number; speed: number; }; } & { innerClassName: string; showBorder: boolean; fadeBottom: boolean; }; gradient: { show: boolean; radialColor: string; linearColor: string; radialOpacity: string; linearOpacity: string; linearOpacityMobile: string; className: string; inset: string; rounded: string; }; title: { text: string; className: string; useRetroText: boolean; animation: 'slide' | 'rotate' | 'highlight' | 'blur' | 'scale' | 'expand' | 'flip' | 'none'; shadowColor: string; shadowOffset: string; animationProps: { duration: number; stagger: number; start: string; end: string; variant: 'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'; }; gradientColors: { from: string; to: string; }; }; descriptions: { texts: Array<string>; className: string; containerClassName: string; }; layout: { alignStart: boolean; descriptionClassName: string; textboxClassName: string; }; button: { className: string; childClassName: string; iconClassName: string; variant: 'bottom' | 'side' | 'none'; }; image: { parentClassName: string; className: string; }; }"
    }
  },
  {
    "import": "import PepeHero from '@/components/sections/layouts/hero/PepeHero';",
    "name": "PepeHero",
    "path": "@/components/sections/layouts/hero/PepeHero",
    "propsSchema": {
      "style": "{ navbar: { logoSrc: string; className: string; logoClassName: string; buttonBgColor: string; buttonHoverBgColor: string; buttonTextColor: string; buttonHoverTextColor: string; buttonClassName: string; buttonContentClassName: string; }; section: { className: string; backgroundColor: string; backgroundPattern: string; backgroundImage: string; spotlight: { width: string; height: string; left: string; top: string; rotate: string; color: string; blur: string; opacity: number; mobileWidth: string; mobileHeight: string; mobileLeft: string; mobileTop: string; mobileRotate: string; }; sparkles: { particleColor: string; particleDensity: number; minSize: number; maxSize: number; speed: number; }; } & { height: string; contentAlignment: string; customGradient: string; sideGlowGradient: { radialColor: string; linearColor: string; radialOpacity: string; linearOpacity: string; rounded: string; }; textContainerClassName: string; gapClassName: string; }; heading: { text: string; className: string; useRetroText: boolean; animation: 'slide' | 'rotate' | 'highlight' | 'blur' | 'scale' | 'expand' | 'flip' | 'none'; shadowColor: string; shadowOffset: string; animationProps: { duration: number; stagger: number; start: string; end: string; variant: 'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'; }; gradientColors: { from: string; to: string; }; }; subheading: Pick<BaseTextConfig, \"text\" | \"className\">; ctaStyle: { containerClassName: string; addressText: string; addressClassName: string; buttonText: string; buttonClassName: string; iconClassName: string; }; }",
      "onMenuClick": "() => void",
      "onContactClick": "() => void"
    }
  },
  {
    "import": "import PlayfulHero from '@/components/sections/layouts/hero/PlayfulHero';",
    "name": "PlayfulHero",
    "path": "@/components/sections/layouts/hero/PlayfulHero",
    "propsSchema": {
      "style": "{ navbar: { logoSrc: string; className: string; logoClassName: string; buttonBgColor: string; buttonHoverBgColor: string; buttonTextColor: string; buttonHoverTextColor: string; buttonClassName: string; buttonContentClassName: string; }; section: { className: string; backgroundColor: string; backgroundPattern: string; backgroundImage: string; spotlight: { width: string; height: string; left: string; top: string; rotate: string; color: string; blur: string; opacity: number; mobileWidth: string; mobileHeight: string; mobileLeft: string; mobileTop: string; mobileRotate: string; }; sparkles: { particleColor: string; particleDensity: number; minSize: number; maxSize: number; speed: number; }; } & { height: string; contentAlignment: string; customGradient: string; sideGlowGradient: { radialColor: string; linearColor: string; radialOpacity: string; linearOpacity: string; rounded: string; }; textContainerClassName: string; gapClassName: string; }; heading: { text: string; className: string; useRetroText: boolean; animation: 'slide' | 'rotate' | 'highlight' | 'blur' | 'scale' | 'expand' | 'flip' | 'none'; shadowColor: string; shadowOffset: string; animationProps: { duration: number; stagger: number; start: string; end: string; variant: 'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'; }; gradientColors: { from: string; to: string; }; }; subheading: Pick<BaseTextConfig, \"text\" | \"className\">; ctaStyle: { containerClassName: string; addressText: string; addressClassName: string; buttonText: string; buttonClassName: string; iconClassName: string; }; }",
      "onMenuClick": "() => void",
      "onContactClick": "() => void"
    }
  },
  {
    "import": "import HowToBuy3D from '@/components/sections/layouts/howtobuy/HowToBuy3D';",
    "name": "HowToBuy3D",
    "path": "@/components/sections/layouts/howtobuy/HowToBuy3D",
    "propsSchema": {
      "style": "{ section: { className: string; backgroundColor: string; backgroundPattern: string; backgroundImage: string; spotlight: { width: string; height: string; left: string; top: string; rotate: string; color: string; blur: string; opacity: number; mobileWidth: string; mobileHeight: string; mobileLeft: string; mobileTop: string; mobileRotate: string; }; sparkles: { particleColor: string; particleDensity: number; minSize: number; maxSize: number; speed: number; }; }; title: { text: string; className: string; useRetroText: boolean; animation: 'slide' | 'rotate' | 'highlight' | 'blur' | 'scale' | 'expand' | 'flip' | 'none'; shadowColor: string; shadowOffset: string; animationProps: { duration: number; stagger: number; start: string; end: string; variant: 'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'; }; gradientColors: { from: string; to: string; }; }; bento: { items: Array<{ title: string description: string; }>; className: string; gridClassName: string; itemClassName: string; imageContainerClassName: string; imageClassName: string; textContainerClassName: string; titleClassName: string; descriptionClassName: string; enableAnimation: boolean; }; }"
    }
  },
  {
    "import": "import Tokenomics from '@/components/sections/layouts/tokenomics/Tokenomics';",
    "name": "Tokenomics",
    "path": "@/components/sections/layouts/tokenomics/Tokenomics",
    "propsSchema": {
      "style": "{ section: { className: string; backgroundColor: string; backgroundPattern: string; spotlight: { className: string; spotlightClassName: string; width: string; height: string; left: string; top: string; rotate: string; color: string; blur: string; opacity: number; mobileWidth: string; mobileHeight: string; mobileLeft: string; mobileTop: string; mobileRotate: string; }; }; title: BaseTextConfig description: { text: string; className?: string; }; bento: { items: Array<{ value: string description: string longDescription?: string icon?: LucideIcon; }>; className: string; gridClassName: string; itemClassName: string; valueClassName: string; descriptionClassName: string; gradientColors: { from: string; to: string; }; }; }"
    }
  },
  {
    "import": "import { funandtrendyStyle } from '@/components/sections/styles/hero/funandtrendyPepe';",
    "name": "funandtrendyStyle",
    "path": "@/components/sections/styles/hero/funandtrendyPepe",
    "propsSchema": {}
  },
  {
    "import": "import { futuristicPepeStyle } from '@/components/sections/styles/hero/futuristicPepe';",
    "name": "futuristicPepeStyle",
    "path": "@/components/sections/styles/hero/futuristicPepe",
    "propsSchema": {}
  },
  {
    "import": "import { SparklesCore } from '@/components/sparkles/Sparkles';",
    "name": "SparklesCore",
    "path": "@/components/sparkles/Sparkles",
    "propsSchema": {}
  },
  {
    "import": "import AnimatedNumberText from '@/components/text/AnimatedNumberText';",
    "name": "AnimatedNumberText",
    "path": "@/components/text/AnimatedNumberText",
    "propsSchema": {
      "value": "number",
      "format": "Omit<Intl.NumberFormatOptions, \"notation\"> & { notation: Exclude<Intl.NumberFormatOptions[\"notation\"], \"scientific\" | \"engineering\">; }",
      "locales": "Intl.LocalesArgument",
      "className": "string",
      "suffix": "string",
      "prefix": "string"
    }
  },
  {
    "import": "import AnimatedRetroText from '@/components/text/AnimatedRetroText';",
    "name": "AnimatedRetroText",
    "path": "@/components/text/AnimatedRetroText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "animation": "'slide' | 'rotate' | 'highlight' | 'blur' | 'scale' | 'expand' | 'flip' | 'none'",
      "shadowColor": "string",
      "shadowOffset": "string",
      "animationProps": "{ duration: number; stagger: number; start: string; end: string; variant: 'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'; }",
      "gradientColors": "{ from: string; to: string; }",
      "as": "'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p' | 'span'"
    }
  },
  {
    "import": "import BlurText from '@/components/text/BlurText';",
    "name": "BlurText",
    "path": "@/components/text/BlurText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "duration": "number",
      "stagger": "number",
      "start": "string",
      "end": "string",
      "variant": "'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'"
    }
  },
  {
    "import": "import ColorRevealText from '@/components/text/ColorRevealText';",
    "name": "ColorRevealText",
    "path": "@/components/text/ColorRevealText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "charDelay": "number",
      "charDuration": "number",
      "colorDelay": "number",
      "startColor": "string",
      "colorPercentage": "number",
      "instant": "boolean",
      "scrollTrigger": "boolean",
      "start": "string",
      "ariaLabel": "string"
    }
  },
  {
    "import": "import ExpandText from '@/components/text/ExpandText';",
    "name": "ExpandText",
    "path": "@/components/text/ExpandText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "duration": "number",
      "stagger": "number",
      "start": "string",
      "end": "string",
      "variant": "'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'"
    }
  },
  {
    "import": "import FlipText from '@/components/text/FlipText';",
    "name": "FlipText",
    "path": "@/components/text/FlipText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "duration": "number",
      "stagger": "number",
      "start": "string",
      "end": "string",
      "variant": "'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'",
      "ariaLabel": "string"
    }
  },
  {
    "import": "import GradientText from '@/components/text/GradientText';",
    "name": "GradientText",
    "path": "@/components/text/GradientText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "ariaLabel": "string",
      "color1": "string",
      "color2": "string",
      "color3": "string"
    }
  },
  {
    "import": "import HighlightText from '@/components/text/HighlightText';",
    "name": "HighlightText",
    "path": "@/components/text/HighlightText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "duration": "number",
      "stagger": "number",
      "start": "string",
      "end": "string",
      "variant": "'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'",
      "ariaLabel": "string",
      "gradientColors": "{ from: string; to: string; }"
    }
  },
  {
    "import": "import HorizontalText from '@/components/text/HorizontalText';",
    "name": "HorizontalText",
    "path": "@/components/text/HorizontalText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "direction": "'left' | 'right'",
      "ariaLabel": "string"
    }
  },
  {
    "import": "import MaskText from '@/components/text/MaskText';",
    "name": "MaskText",
    "path": "@/components/text/MaskText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "backgroundSrc": "string",
      "ariaLabel": "string"
    }
  },
  {
    "import": "import ParallaxText from '@/components/text/ParallaxText';",
    "name": "ParallaxText",
    "path": "@/components/text/ParallaxText",
    "propsSchema": {
      "text": "string",
      "baseVelocity": "number",
      "className": "string",
      "textClassName": "string",
      "ariaLabel": "string"
    }
  },
  {
    "import": "import RetroText from '@/components/text/RetroText';",
    "name": "RetroText",
    "path": "@/components/text/RetroText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "shadowColor": "string",
      "shadowOffset": "string",
      "onClick": "() => void",
      "as": "'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p' | 'span'"
    }
  },
  {
    "import": "import RotateText from '@/components/text/RotateText';",
    "name": "RotateText",
    "path": "@/components/text/RotateText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "duration": "number",
      "stagger": "number",
      "start": "string",
      "end": "string",
      "variant": "'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'",
      "ariaLabel": "string",
      "gradientColors": "{ from: string; to: string; }"
    }
  },
  {
    "import": "import ScaleText from '@/components/text/ScaleText';",
    "name": "ScaleText",
    "path": "@/components/text/ScaleText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "duration": "number",
      "stagger": "number",
      "start": "string",
      "end": "string",
      "variant": "'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'",
      "ariaLabel": "string"
    }
  },
  {
    "import": "import SlideText from '@/components/text/SlideText';",
    "name": "SlideText",
    "path": "@/components/text/SlideText",
    "propsSchema": {
      "text": "string",
      "children": "React.ReactNode",
      "className": "string",
      "duration": "number",
      "stagger": "number",
      "start": "string",
      "end": "string",
      "variant": "'scrub' | 'trigger' | 'words-scrub' | 'words-trigger'",
      "gradientColors": "{ from: string; to: string; }"
    }
  },
  {
    "import": "import WaveText from '@/components/text/WaveText';",
    "name": "WaveText",
    "path": "@/components/text/WaveText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "primaryColor": "string",
      "secondaryColor": "string",
      "start": "string",
      "stagger": "number",
      "duration": "number",
      "ease": "string",
      "ariaLabel": "string"
    }
  },
  {
    "import": "import CubeText from '@/components/text/cubeText/CubeText';",
    "name": "CubeText",
    "path": "@/components/text/cubeText/CubeText",
    "propsSchema": {
      "items": "[string, string, string, string]",
      "autoPlay": "boolean",
      "duration": "number",
      "ariaLabel": "string"
    }
  },
  {
    "import": "import HoverGradientText from '@/components/text/hoverGradientText/HoverGradientText';",
    "name": "HoverGradientText",
    "path": "@/components/text/hoverGradientText/HoverGradientText",
    "propsSchema": {
      "text": "string",
      "className": "string",
      "fontSize": "string",
      "strokeWidth": "number",
      "ariaLabel": "string"
    }
  },
  {
    "import": "import ContentTextbox from '@/components/textbox/ContentTextbox';",
    "name": "ContentTextbox",
    "path": "@/components/textbox/ContentTextbox",
    "propsSchema": {
      "title": "ReactNode",
      "description": "ReactNode",
      "children": "ReactNode",
      "className": "string",
      "titleClassName": "string",
      "descriptionClassName": "string",
      "contentClassName": "string",
      "disableAnimation": "boolean"
    }
  },
  {
    "import": "import HorizontalTextbox from '@/components/textbox/HorizontalTextbox';",
    "name": "HorizontalTextbox",
    "path": "@/components/textbox/HorizontalTextbox",
    "propsSchema": {
      "title": "ReactNode",
      "description": "ReactNode",
      "className": "string",
      "titleClassName": "string",
      "descriptionClassName": "string",
      "reverseLayout": "boolean",
      "alignStart": "boolean"
    }
  },
  {
    "import": "import InlineTextbox from '@/components/textbox/InlineTextbox';",
    "name": "InlineTextbox",
    "path": "@/components/textbox/InlineTextbox",
    "propsSchema": {
      "title": "ReactNode",
      "description": "ReactNode",
      "className": "string",
      "titleClassName": "string",
      "descriptionClassName": "string"
    }
  },
  {
    "import": "import StandardTextbox from '@/components/textbox/StandardTextbox';",
    "name": "StandardTextbox",
    "path": "@/components/textbox/StandardTextbox",
    "propsSchema": {
      "title": "ReactNode",
      "description": "ReactNode",
      "className": "string",
      "titleClassName": "string",
      "descriptionClassName": "string"
    }
  },
  {
    "import": "import TaggedTextbox from '@/components/textbox/TaggedTextbox';",
    "name": "TaggedTextbox",
    "path": "@/components/textbox/TaggedTextbox",
    "propsSchema": {
      "icon": "ReactNode",
      "label": "ReactNode",
      "title": "ReactNode",
      "description": "ReactNode",
      "children": "ReactNode",
      "className": "string",
      "tagClassName": "string",
      "titleClassName": "string",
      "descriptionClassName": "string",
      "contentClassName": "string",
      "disableAnimation": "boolean"
    }
  },
  {
    "import": "import VerticalTextbox from '@/components/textbox/Verticaltextbox';",
    "name": "VerticalTextbox",
    "path": "@/components/textbox/Verticaltextbox",
    "propsSchema": {
      "title": "ReactNode",
      "description": "ReactNode",
      "className": "string",
      "titleClassName": "string",
      "descriptionClassName": "string",
      "reverseLayout": "boolean",
      "alignStart": "boolean"
    }
  },
  {
    "import": "import ThreeDStackTimeline from '@/components/timeline/3DStackTimeline';",
    "name": "ThreeDStackTimeline",
    "path": "@/components/timeline/3DStackTimeline",
    "propsSchema": {
      "items": "Array<{ id: number; title: string; description: string; image: string; }>",
      "className": "string"
    }
  },
  {
    "import": "import ProcessTimeline from '@/components/timeline/ProcessTimeline';",
    "name": "ProcessTimeline",
    "path": "@/components/timeline/ProcessTimeline",
    "propsSchema": {}
  },
  {
    "import": "import StackTimeline from '@/components/timeline/StackTimeline';",
    "name": "StackTimeline",
    "path": "@/components/timeline/StackTimeline",
    "propsSchema": {
      "items": "Array<{ id: number; title: string; description: string; image: string; }>",
      "className": "string"
    }
  },
  {
    "import": "import Timeline from '@/components/timeline/Timeline';",
    "name": "Timeline",
    "path": "@/components/timeline/Timeline",
    "propsSchema": {
      "items": "Array<{ title: string; description: string; video: string; image: string; }>",
      "title": "string",
      "className": "string"
    }
  },
  {
    "import": "import YearTimeline from '@/components/timeline/YearTimeline';",
    "name": "YearTimeline",
    "path": "@/components/timeline/YearTimeline",
    "propsSchema": {
      "items": "Array<{ year: string; title: string; description: string; }>",
      "className": "string"
    }
  },
  {
    "import": "import HorizontalTimeline from '@/components/timeline/horizontalTimeline/HorizontalTimeline';",
    "name": "HorizontalTimeline",
    "path": "@/components/timeline/horizontalTimeline/HorizontalTimeline",
    "propsSchema": {
      "items": "Array<{ title: string; description: string; video: string; image: string; }>",
      "className": "string"
    }
  },
  {
    "import": "import ContentBlock from '@/components/timeline/phoneTimeline/ContentBlock';",
    "name": "ContentBlock",
    "path": "@/components/timeline/phoneTimeline/ContentBlock",
    "propsSchema": {
      "item": "PhoneTimelineItem",
      "titleRef": "(el: HTMLHeadingElement | null) => void",
      "descriptionRef": "(el: HTMLParagraphElement | null) => void",
      "containerClassName": "string",
      "wrapperClassName": "string",
      "titleClassName": "string",
      "descriptionClassName": "string"
    }
  },
  {
    "import": "import PhoneFrame from '@/components/timeline/phoneTimeline/PhoneFrame';",
    "name": "PhoneFrame",
    "path": "@/components/timeline/phoneTimeline/PhoneFrame",
    "propsSchema": {
      "imageSrc": "string",
      "imageRef": "(el: HTMLDivElement | null) => void",
      "className": "string",
      "altText": "string"
    }
  },
  {
    "import": "import PhoneTimeline from '@/components/timeline/phoneTimeline/PhoneTimeline';",
    "name": "PhoneTimeline",
    "path": "@/components/timeline/phoneTimeline/PhoneTimeline",
    "propsSchema": {
      "items": "Array<PhoneTimelineItem>"
    }
  },
  {
    "import": "import PopupTimeline from '@/components/timeline/popupTimeline/PopupTimeline';",
    "name": "PopupTimeline",
    "path": "@/components/timeline/popupTimeline/PopupTimeline",
    "propsSchema": {
      "items": "Array<{ title: string; description: string; video: string; image: string; }>",
      "title": "string",
      "className": "string"
    }
  },
  {
    "import": "import TimelinePopup from '@/components/timeline/popupTimeline/TimelinePopup';",
    "name": "TimelinePopup",
    "path": "@/components/timeline/popupTimeline/TimelinePopup",
    "propsSchema": {
      "isOpen": "boolean",
      "item": "{ title: string; description: string; video: string; image: string; } | null",
      "onClose": "() => void"
    }
  }
]
